spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # name: xxx-druid
      url: ${secret.prod.spring.datasource.druid.url}
      username: ${secret.prod.spring.datasource.druid.username}
      password: ${secret.prod.spring.datasource.druid.password}
      filters: stat,wall
      initialSize: 5
      maxActive: 20
      maxWait: 60000
      minIdle: 5
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 1 from dual
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
      # 配置 DruidStatFilter
      webStatFilter:
        enabled: true
        urlPattern: '/*'
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      # 配置 DruidStatViewServlet
      statViewServlet:
        # 是否启用 StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
        enabled: true
        urlPattern: '/druid/*'
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow:
        # IP黑名单 (存在共同时，deny优先于allow)
        deny:
        # 禁用HTML页面上的“Reset All”功能
        resetEnable: false
        # 登录名
        loginUsername: ${secret.prod.spring.datasource.druid.statViewServlet.loginUsername}
        # 登录密码
        loginPassword: ${secret.prod.spring.datasource.druid.statViewServlet.loginPassword}

  redis:
    redisson:
      singleServerConfig:
        # 连接redis的地址和密码
        address: ${secret.prod.spring.redis.redisson.singleServerConfig.address}
        password: ${secret.prod.spring.redis.redisson.singleServerConfig.password}

jjwt:
  issuer: UAIOSC-framework-JJWT-prod
  secret: ${secret.prod.jjwt.secret}
  expireMinutes:
    # 3小时、7天
    authToken: 180
    refreshToken: 10080
